# coding: utf-8

"""
    Better Auth

    API Reference for your Better Auth Instance

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from better_auth.models.two_factor_verify_backup_code_post200_response import TwoFactorVerifyBackupCodePost200Response

class TestTwoFactorVerifyBackupCodePost200Response(unittest.TestCase):
    """TwoFactorVerifyBackupCodePost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TwoFactorVerifyBackupCodePost200Response:
        """Test TwoFactorVerifyBackupCodePost200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TwoFactorVerifyBackupCodePost200Response`
        """
        model = TwoFactorVerifyBackupCodePost200Response()
        if include_optional:
            return TwoFactorVerifyBackupCodePost200Response(
                user = better_auth.models._two_factor_verify_backup_code_post_200_response_user._two_factor_verify_backup_code_post_200_response_user(
                    id = '', 
                    email = '', 
                    email_verified = True, 
                    name = '', 
                    image = '', 
                    two_factor_enabled = True, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                session = better_auth.models._two_factor_verify_backup_code_post_200_response_session._two_factor_verify_backup_code_post_200_response_session(
                    token = '', 
                    user_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return TwoFactorVerifyBackupCodePost200Response(
                user = better_auth.models._two_factor_verify_backup_code_post_200_response_user._two_factor_verify_backup_code_post_200_response_user(
                    id = '', 
                    email = '', 
                    email_verified = True, 
                    name = '', 
                    image = '', 
                    two_factor_enabled = True, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                session = better_auth.models._two_factor_verify_backup_code_post_200_response_session._two_factor_verify_backup_code_post_200_response_session(
                    token = '', 
                    user_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testTwoFactorVerifyBackupCodePost200Response(self):
        """Test TwoFactorVerifyBackupCodePost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
